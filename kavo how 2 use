--[[
(you can find all to : https://xheptcofficial.gitbook.io/kavo-library/ )

Summary : 
library script(20 - 23)
ui theme      (25 - 27) (151 - 159)
tabs          (29 - 31)
sections      (33 - 44)
text / labels (48 - 55)
buttons       (57 - 67)
toggles       (69 - 95)
sliders       (97 - 101)
textbox       (103 - 107)
keybind       (109 - 119)
dropdown      (121 - 142)
color picker  (144 - 149)
customise all (151 - 167)
hello welcome to the how 2 use , imma learn you how to use it so first 

write this (the real kavo script) (so if the kavo update you need use the kavo script )
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
or this (a backup of the kavo) (so it will be a old version of kavo if it update)
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/PitchyATree/roblox-exploit-library/main/"kavo%20library"'))()

just after that you have to write this : 
local Window = Library.CreateLib("TITLE", "DarkTheme")                                                                                     there is more theme -->                colors if you want to customise (go to line 151 for next) 
the title = title of the kavo ui , the DarkTheme isn't the only theme you can add to the ui , (change DarkTheme to the future word imma show) LightTheme , DarkTheme , GrapeTheme , BloodTheme , Ocean , Midnight , Sentinel and Synapse

so next write :
local Tab = Window:NewTab("TabName")
(you can make 10 tabs)

so next write
local Section = Tab:NewSection("Section Name")
(below the tab you want)
(tab
section
section
tab
section)
like that or all section will be in the first tab

Section:UpdateSection("Section New Title")
(below the section if you want update it)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
so now you can put these how you want ! 
to make a label (only text) : 

Section:NewLabel("LabelText")

if you want update it : 

label:UpdateLabel("New Text")
(below the label text)

to make a button : 

Section:NewButton("ButtonText", "ButtonInfo", function() <-- button info = info when you press the left button on the button to know what it does (you can do: ("lmao", "", function() )
    print("Clicked") <-- script you want the button do
end)

if you want update the button : 

button:UpdateButton("New Text")

(below the button script (below all end ))

if you want do a toggle : 

Section:NewToggle("ToggleText", "ToggleInfo", function(state)
    if state then
        print("Toggle On")    <-- when the toggle on
    else
        print("Toggle Off") <-- when the toggle off
    end
end)

if you want update it : 

getgenv().Toggled = false

local toggle = Section:NewToggle("Toggle", "Info", (state)
    getgenv().Toggled = state
end)

game:GetService("RunService").RenderStepped:Connect(function()
	if getgenv().Toggled then
		toggle:UpdateToggle("Toggle On")
	else
		toggle:UpdateToggle("Toggle Off")
	end
end)

(below the toggle script (below all end ))

for a slider : 

Section:NewSlider("SliderText", "SliderInfo", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue) <-- you can change the values to whatever you want
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s <-- the script who change the value
end)

for a textbox : 

Section:NewTextBox("TextboxText", "TextboxInfo", function(txt)
	print(txt)
end)

if you want add a keybind (when a key is pressed it does a script like getgenv false --> true --> false)

Section:NewKeybind("KeybindText", "KeybindInfo", Enum.KeyCode.F, function()
	print("You just clicked the bind")
end)

if you want toggle it : 

Section:NewKeybind("KeybindText", "KeybindInfo", Enum.KeyCode.F, function()
	Library:ToggleUI()
end)

if you want do a drop down (button who have a few button) : 

Section:NewDropdown("DropdownText", "DropdownInf", {"Option 1", "Option 2", "Option 3"}, function(currentOption) <-- you can add more option by doing this : ( , "the new one" )
    print(currentOption)
end)

if you want to refresh it : 

local oldList = {
  "2019",
  "2020"
}
local newList = {
  "2021",
  "2022"
}
local dropdown = Section:NewDropdown("Dropdown","Info", oldList, function()

end)
Section:NewButton("Update Dropdown", "Refreshes Dropdown", function()
  dropdown:Refresh(newList)
end)

if you want to add a color picker : 

Section:NewColorPicker("Color Text", "Color Info", Color3.fromRGB(0,0,0), function(color)
    print(color)
    -- Second argument is the default color
end)

to make the color you want to the ui :

local colors = {
    SchemeColor = Color3.fromRGB(0,255,255),
    Background = Color3.fromRGB(0, 0, 0),
    Header = Color3.fromRGB(0, 0, 0),
    TextColor = Color3.fromRGB(255,255,255),
    ElementColor = Color3.fromRGB(20, 20, 20)
}

and if you want to choose the color you want to all : 

for theme, color in pairs(themes) do
    Section:NewColorPicker(theme, "Change your "..theme, color, function(color3)
        Library:ChangeColor(theme, color3)
    end)
end

congrat now you have all to do some kavo script ! 
i hope it helped !!


]]
