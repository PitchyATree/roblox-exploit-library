--[[
READ THIS BEFORE USING

- The main window CAN ONLY HAVE TABS, if u create button in it the script will BREAK,

to make a button work do this

if chosenOption.Name == "your button name" then
	pcall(function()
		-- your script here
	end)
end

-- THE SCRIPT IS VERY BUGGY AND HAS MANY ERRORS --
Feel free to learn from the code or make it better, idrc what u do with this code.
Ill dont update it till I know more about scripting (because it has many bugs and errors and idk how to fix them)

]]

local lib = {}

function lib:CreateWindow(name)
	name = name or "Kiddion's Modest Menu v0.9.0"
	
	local KiddionsModMenu = Instance.new("ScreenGui")
	local Window = Instance.new("Frame")
	local Title = Instance.new("TextLabel")
	local Container = Instance.new("Frame")
	local UIListLayout = Instance.new("UIListLayout")
	local Tabs = Instance.new("Folder")
	
	KiddionsModMenu.Name = "KiddionsModMenu"
	KiddionsModMenu.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	KiddionsModMenu.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Window.Name = "Window"
	Window.Parent = KiddionsModMenu
	Window.BackgroundColor3 = Color3.fromRGB(0, 73, 104)
	Window.BackgroundTransparency = 0.200
	Window.BorderSizePixel = 0
	Window.Position = UDim2.new(0.559570312, 0, 0.147329643, 0)
	Window.Size = UDim2.new(0, 238, 0, 20)

	Title.Name = "Title"
	Title.Parent = Window
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Size = UDim2.new(0, 238, 0, 16)
	Title.Font = Enum.Font.Gotham
	Title.Text = "Kiddion's Modest Menu v0.9.0"
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextSize = 14.000

	Container.Name = "Container"
	Container.Parent = Window
	Container.BackgroundColor3 = Color3.fromRGB(0, 73, 104)
	Container.BackgroundTransparency = 1.000
	Container.BorderSizePixel = 0
	Container.ClipsDescendants = true
	Container.Position = UDim2.new(0, 0, 1, 0)
	Container.Size = UDim2.new(0, 238, 0, 0)
	
	UIListLayout.Parent = Container
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 0)
	
	Tabs.Name = "Tabs"
	Tabs.Parent = Window
	
	local tabs = {}
	local options = {}
	
	local actualOption = 0
	local previousOption = 0
	
	local containerSize = 0
	
	local actualTab = 0
	local previousTab = 0
	
	local inTab = false
	
	local menuToggled = true
	local UserInputService = game:GetService("UserInputService")
	
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if input.UserInputType == Enum.UserInputType.Keyboard then
			local keyPressed = input.KeyCode
			if keyPressed == Enum.KeyCode.F4 then
				if menuToggled then
					KiddionsModMenu.Enabled = false
					menuToggled = false
				else
					KiddionsModMenu.Enabled = true
					menuToggled = true
				end
			elseif keyPressed == Enum.KeyCode.KeypadTwo then
				actualOption = actualOption + 1
				if previousOption == 0 then
					previousOption = 1
				else	
					previousOption = actualOption - 1
				end

				if inTab then
					local tabb = Tabs[tabs[actualTab]]
					if tabb:FindFirstChild(options[actualOption]) then
						local optionn = options[actualOption]
						tabb[optionn].BackgroundColor3 = Color3.fromRGB(155, 162, 13)
						if previousOption ~= 0 then
							local loloption = options[previousOption]
							tabb[loloption].BackgroundColor3 = Color3.fromRGB(0, 73, 104)
						end
					end
				end
				
				if not inTab then
					if Container:FindFirstChild(options[actualOption]) then
						local optionnn = options[actualOption]
						Container[optionnn].BackgroundColor3 = Color3.fromRGB(155, 162, 13)
						if previousOption ~= 0 then
							local loloption = options[previousOption]
							Container[loloption].BackgroundColor3 = Color3.fromRGB(0, 73, 104)
						end
					end
				end
				
			elseif keyPressed == Enum.KeyCode.KeypadEight then
				actualOption = actualOption - 1
				if previousOption == 0 then
					previousOption = 1
				else	
					previousOption = actualOption + 1
				end
				
				if inTab then
					local tabb = Tabs[tabs[actualTab]]
					if tabb:FindFirstChild(options[actualOption]) then
						local optionn = options[actualOption]
						tabb[optionn].BackgroundColor3 = Color3.fromRGB(155, 162, 13)
						if previousOption ~= 0 then
							local loloption = options[previousOption]
							tabb[loloption].BackgroundColor3 = Color3.fromRGB(0, 73, 104)
						end
					end
				end

				if not inTab then
					if Container:FindFirstChild(options[actualOption]) then
						local optionnn = options[actualOption]
						Container[optionnn].BackgroundColor3 = Color3.fromRGB(155, 162, 13)
						if previousOption ~= 0 then
							local loloption = options[previousOption]
							Container[loloption].BackgroundColor3 = Color3.fromRGB(0, 73, 104)
						end
					end
				end
				
			elseif keyPressed == Enum.KeyCode.KeypadFive then
				local chosenOption = Container:FindFirstChild(options[actualOption])
				
				if actualTab ~= 0 then
					chosenOption = Tabs[tabs[actualTab]]:FindFirstChild(options[actualOption])
				end
				

				--[[]]
				if chosenOption.Name == "Ultra_Jump" then
					pcall(function()
						game.Players.LocalPlayer.Character.Humanoid.JumpHeight = 50
					end)
				end
				
				if not inTab then
					actualTab = actualTab + 1
					inTab = true
					previousTab = 0
					Tabs[tabs[actualTab]].Visible = true
					Container.Visible = false
				end
			elseif keyPressed == Enum.KeyCode.KeypadZero then
				if previousTab == 0 and inTab == true then
					for i,v in pairs(Tabs:GetChildren()) do
						v.Visible = false
					end
					Container.Visible = true
					actualTab = 0
					inTab = false
				end
			end
		end
	end)
	
	local libb = {}
	
	function libb:CreateTab(name)
		name = name or "Tab"
		
		local tabBtn = Instance.new("TextLabel")
		local ImageLabel = Instance.new("ImageLabel")
		local Tab = Instance.new("Frame")
		local UIListLayout_2 = Instance.new("UIListLayout")
		
		tabBtn.Name = name
		tabBtn.Parent = Container
		tabBtn.BackgroundColor3 = Color3.fromRGB(0, 73, 104)
		tabBtn.BackgroundTransparency = 0.600
		tabBtn.BorderSizePixel = 0
		tabBtn.Size = UDim2.new(0, 238, 0, 19)
		tabBtn.Font = Enum.Font.Gotham
		tabBtn.Text = name
		tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
		tabBtn.TextSize = 14.000

		ImageLabel.Parent = tabBtn
		ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel.BackgroundTransparency = 1.000
		ImageLabel.Position = UDim2.new(0.89915967, 0, 0.157894731, 0)
		ImageLabel.Rotation = 90.000
		ImageLabel.Size = UDim2.new(0, 13, 0, 12)
		ImageLabel.ZIndex = 2
		ImageLabel.Image = "http://www.roblox.com/asset/?id=483266793"

		Tab.Name = name
		Tab.Parent = Tabs
		Tab.BackgroundColor3 = Color3.fromRGB(0, 73, 104)
		Tab.BackgroundTransparency = 1.000
		Tab.BorderSizePixel = 0
		Tab.ClipsDescendants = true
		Tab.Position = UDim2.new(0, 0, 1, 0)
		Tab.Size = UDim2.new(0, 238, 0, 0)
		Tab.Visible = false
		
		UIListLayout_2.Parent = Tab
		UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout_2.Padding = UDim.new(0, 0)
		
		table.insert(options, name)
		table.insert(tabs, name)
		
		containerSize = containerSize + 19

		Container.Size = UDim2.new(0, 238, 0, containerSize)
		
		local TabSize = 0
		
		local libbb = {}
		
		function libbb:CreateOption(name)
			name = name or "Option"
			
			local tabBtn_2 = Instance.new("TextLabel")

			tabBtn_2.Name = name
			tabBtn_2.Parent = Tab
			tabBtn_2.BackgroundColor3 = Color3.fromRGB(0, 73, 104)
			tabBtn_2.BackgroundTransparency = 0.600
			tabBtn_2.BorderSizePixel = 0
			tabBtn_2.Size = UDim2.new(0, 238, 0, 19)
			tabBtn_2.Font = Enum.Font.Gotham
			tabBtn_2.Text = name
			tabBtn_2.TextColor3 = Color3.fromRGB(255, 255, 255)
			tabBtn_2.TextSize = 14.000
			
			TabSize = TabSize + 19

			Tab.Size = UDim2.new(0, 238, 0, TabSize)
			
			table.insert(options, name)
		end
		
		return libbb
	end
	
	return libb
end

return lib
